<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/context  
   	http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
    <!-- 自动扫描 在xml配置了这个标签后，spring可以自动去扫描base-pack下面或者子包下面的java文件 ，如果扫描到有@Component 
		@Controller@Service等这些注解的类，则把这些类注册为bean -->
	<context:component-scan base-package="com.happyheng" />

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:dbconfig.properties" />
	</bean>
	<!-- 配置数据库信息 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${dburl}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- 此为生成sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/happyheng/**/*Mapper.xml"/>
	</bean>

	<bean id="userDao" class="com.happyheng.dao.impl.UserDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="recordDao" class="com.happyheng.dao.impl.SportRecordDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="newsDao" class="com.happyheng.dao.impl.NewsDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="countDao" class = "com.happyheng.dao.impl.NewsCountDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>

	<bean id="redisNewsDao" class="com.happyheng.dao.impl.NewsDaoRedisImplement">
		<property name="newsDao" ref="newsDao"></property>
	</bean>

	<bean id="newsCountCacheDao" class="com.happyheng.cache.NewsCountCache">
		<property name="countDao" ref="countDao"></property>
	</bean>

	<bean id="loginService" class="com.happyheng.service.impl.LoginServiceImpl">
		<property name="UserDao" ref="userDao"></property>
	</bean>

	<bean id="registerService" class="com.happyheng.service.impl.RegisterServiceImpl">
		<property name="UserDao" ref="userDao"></property>
	</bean>

	<bean id="sportIdService" class="com.happyheng.service.impl.SportIdServiceImpl">
		<property name="UserDao" ref="userDao"></property>
		<property name="RecordDao" ref="recordDao"></property>
	</bean>

	<bean id="sportRecordService" class="com.happyheng.service.impl.SportRecordServiceImpl">
		<property name="RecordDao" ref="recordDao"></property>
	</bean>

	<bean id="newsService" class="com.happyheng.service.impl.NewsServiceImpl">
		<property name="NewsDao" ref="redisNewsDao"></property>
	</bean>

	<bean id="newsCountService" class="com.happyheng.service.impl.NewsCountServiceImpl">
		<property name="cacheDao" ref="newsCountCacheDao"></property>
	</bean>
	
	<bean id="sportListService" class="com.happyheng.service.impl.SportListServiceImpl">
		<property name="RecordDao" ref="recordDao"></property>
	</bean>
	
	<bean id="sportMessageService" class="com.happyheng.service.impl.SportMessageImpl">
		<property name="RecordDao" ref="recordDao"></property>
	</bean>


</beans>
